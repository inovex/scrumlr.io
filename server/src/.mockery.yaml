---
with-expecter: true
dir: mocks/{{ replaceAll .InterfaceDirRelative "internal" "internal_" }}
mockname: "Mock{{.InterfaceName}}"
outpkg: "{{.PackageName}}"
filename: "mock_{{.InterfaceName}}.go"
resolve-type-alias: false
issue-845-fix: true
packages:

  # configuration on package level
  net/http:
    interfaces:
      ResponseWriter:
        all: true

  scrumlr.io/server/services:
    # configuration on interface level
    interfaces:
      Boards:
        all: true
      BoardSessions:
        all: true
      Notes:
        all: true
      Votings:
        all: true

  scrumlr.io/server/realtime:
    interfaces:
      Client:
        all: true

  scrumlr.io/server/reactions:
    config:
      dir: "{{.InterfaceDir}}"
      inpackage: true
    interfaces:
      ReactionService:
        all: true
      ReactionDatabase:
        all: true

  scrumlr.io/server/health:
    config:
      dir: "{{.InterfaceDir}}"
      inpackage: true
    interfaces:
      HealthService:
        all: true
      HealthDatabase:
        all: true

  scrumlr.io/server/sessions:
    config:
      dir: "{{.InterfaceDir}}"
      inpackage: true
    interfaces:
      SessionService:
        all: true
      SessionDatabase:
        all: true

  scrumlr.io/server/sessionrequests:
    config:
      dir: "{{.InterfaceDir}}"
      inpackage: true
    interfaces:
      SessionRequestService:
        all: true
      SessionRequestDatabase:
        all: true
      Websocket:
        all: true

  scrumlr.io/server/notes:
    config:
      dir: "{{.InterfaceDir}}"
      inpackage: true
    interfaces:
      NotesService:
        all: true
      NotesDatabase:
        all: true

  scrumlr.io/server/voting:
    config:
      dir: "{{.InterfaceDir}}"
      inpackage: true
    interfaces:
      VotingService:
        all: true
      VotingDatabase:
        all: true

  scrumlr.io/server/users:
    config:
      dir: "{{.InterfaceDir}}"
      inpackage: true
    interfaces:
      UserService:
        all: true
      UserDatabase:
        all: true
