name: staging-CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    strategy:
      matrix:
        node: [ 13 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
      - name: Checking prettied files
        run: npm run prettier:check
        # TODO #118: - name: Linting with eslint
        # TODO #118: run: npm run lint
      - name: Testing with coverage
        run: npm test -- --coverage --watchAll=false
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/clover.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
  deploy_firebase:
    needs: build
    name: Deploy to Firebase
    strategy:
      matrix:
        node: [ 13 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
      - name: Building produciton version
        run: npm run build
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --project ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  deploy_github:
    needs: build
    name: Deploy to GitHub Packages
    strategy:
      matrix:
        node: [ 13 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
      - name: Building production version
        run: npm run build
      - name: Login to GitHub package registry
        run: docker login docker.pkg.github.com -u theexiile1305 -p ${{ secrets.TOKEN }}
      - name: Building docker image
        run: docker build -t docker.pkg.github.com/scrumlr/scrumlr.io/scrumlrlatest .
      - name: Uploading to GitHub package registry
        run: docker push docker.pkg.github.com/scrumlr/scrumlr.io/scrumlr:latest
