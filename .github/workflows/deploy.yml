name: Deployment
on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types: [completed]
  pull_request:
    types: [labeled]
jobs:
  build-frontend:
    runs-on: self-hosted
    if: "${{ (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request'  && github.event.label.name == 'Action: Deploy PR') || (github.event.action == 'labeled' && github.event.label.name == 'Action: Deploy PR')}}"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            registry.kube.com/scrumlr-frontend
          tags: |
            type=ref,event=pr

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker

      - name: Build and push Frontend
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=registry.kube.com/scrumlr-frontend:latest
          cache-to: type=inline

  build-server:
    runs-on: self-hosted
    if: "${{ (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request'  && github.event.label.name == 'Action: Deploy PR') || (github.event.action == 'labeled' && github.event.label.name == 'Action: Deploy PR')}}"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            registry.kube.com/scrumlr-server
          tags: |
            type=ref,event=pr
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker

      - name: Build and push Server
        uses: docker/build-push-action@v2
        with:
          context: ./server/src
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=registry.kube.com/scrumlr-server:latest
          cache-to: type=inline

  deploy-pr:
    name: Deploy Feature Branch
    runs-on: self-hosted
    if: "${{ (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request'  && github.event.label.name == 'Action: Deploy PR') || (github.event.action == 'labeled' && github.event.label.name == 'Action: Deploy PR')}}"
    needs: [build-frontend, build-server]
    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: generate values-dev.yaml
        run: |
          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          cat > values-dev.yaml << EOF
          hostname: $PR_NUMBER.scrumlr.fra.ics.inovex.io
          cert:
            enabled: true
            name: scrumlr-cert-$PR_NUMBER
          frontend:
            image: registry.kube.com/scrumlr-frontend:$PR_NUMBER
            imagePullPolicy: Always
          server:
            image: registry.kube.com/scrumlr-server:$PR_NUMBER
            imagePullPolicy: Always
          EOF

      - name: deploy pr
        run: |
          kubectl get po -n scrumlr-$PR_NUMBER  | grep 'Running\|Completed' && helm uninstall scrumlr-$PR_NUMBER -n scrumlr-$PR-NUMBER && kubectl delete ns scrumlr-$PR_NUMBER
          kubectl wait --for=delete namespace/scrumlr-$PR_NUMBER --timeout=60s
          helm dep up deployment/chart/
          helm install scrumlr-$PR_NUMBER ./deployment/chart -f values-dev.yaml --namespace scrumlr-$PR_NUMBER --create-namespace
  deploy-main:
    name: Deploy Main Branch
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push'}}
    steps:
      - name: deploy main
        run: |
          helm uninstall scrumlr-main --namespace scrumlr-main --wait
          helm dep up deployment/chart/
          helm install scrumlr-main ./deployment/chart -f ./deployment/chart/env/dev.yaml --namespace scrumlr-main
