name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build server
        working-directory: ./server
        run: |
          yarn install
          yarn build

      - name: Build client
        run: |
          yarn install
          CI=false yarn build

      - name: Test with coverage
        run: yarn test --coverage --watchAll=false --passWithNoTests

  build-and-push-main:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event == 'push'  }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Log in to Github Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
       
      - name: Build and push Frontend
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/inovex/scrumlr.io/scrumlr-frontend:latest
      
      - name: Build and push Dashboard
        uses: docker/build-push-action@v2
        with:
          context: ./dashboard
          push: true
          tags: ghcr.io/inovex/scrumlr.io/scrumlr-dashboard:latest

      - name: Build and push Server
        uses: docker/build-push-action@v2
        with:
          context: ./server
          push: true
          tags: ghcr.io/inovex/scrumlr.io/scrumlr-server:latest

  build-frontend:
    runs-on: self-hosted
    needs: test
    if: ${{ github.event == 'pull_request' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            registry.kube.com/scrumlr-frontend
          tags: |
            type=ref,event=pr

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
       
      - name: Build and push Frontend
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
  build-server:
    runs-on: self-hosted
    needs: test
    if: ${{ github.event == 'pull_request' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            registry.kube.com/scrumlr-server
          tags: |
            type=ref,event=pr
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
       
      - name: Build and push Frontend
        uses: docker/build-push-action@v2
        with:
          context: ./server
          push: true
          tags: ${{ steps.meta.outputs.tags }}
  
  build-dashboard:
    runs-on: self-hosted
    if: ${{ github.event == 'pull_request' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            registry.kube.com/scrumlr-dashboard
          tags: |
            type=ref,event=pr
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
       
      - name: Build and push Frontend
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./dashboard
          tags: ${{ steps.meta.outputs.tags }}

