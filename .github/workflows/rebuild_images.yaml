name: Rebuild images

on:
  workflow_dispatch:

jobs:
  package-frontend:
    outputs:
      frontend-image-tag: ${{ steps.outputs.outputs.frontend-image-tag }}
    strategy:
      fail-fast: false
      matrix:
        tag: ["v2.1.0", "v2.1.1", "v2.1.2", "v2.2.0", "v2.2.1", "v2.2.2", "v2.2.3", "v2.2.4", "v2.5.0", "v2.6.0", "v2.6.1", "v2.6.2", "v2.6.3", "v2.6.4", "v2.7.0", "v2.7.1", "v2.7.2", "v2.7.3", "v2.7.4", "v2.7.5", "v2.7.6", "v2.7.7", "v2.7.8", "v2.8.0", "v2.8.1", "v3.0.0", "v3.1.0", "v3.2.0", "v3.2.1", "v3.3.0", "v3.4.0", "v3.4.1", "v3.5.0", "v3.5.1", "v3.5.2", "v3.5.3", "v3.6.0", "v3.7.0", "v3.7.1", "v3.8.0", "v3.8.1", "v3.8.2", "v3.9.0", "v3.10.0", "v3.10.1", "v3.10.2", "v3.10.3", "v3.11.0"]
        build_info:
          - { platform: 'linux/amd64', runner: 'ubuntu-latest' }
          - { platform: 'linux/arm64', runner: 'ubuntu-24.04-arm' }
    runs-on: ${{ matrix.build_info.runner }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.tag }}

      - name: Prepare Docker tags
        id: prep_tags
        run: |
          TAG="${{ matrix.tag }}"
          echo "tag=${TAG#v}" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.build_info.platform }}
          push: true
          tags: |
            ghcr.io/inovex/scrumlr.io/scrumlr-frontend:${{ steps.prep_tags.outputs.tag }}
            ghcr.io/inovex/scrumlr.io/scrumlr-frontend:latest
          labels: |
            org.opencontainers.image.authors=info@scrumlr.io
            org.opencontainers.image.url=https://github.com/inovex/scrumlr.io/pkgs/container/scrumlr.io%2Fscrumlr-frontend
            org.opencontainers.image.source=https://github.com/inovex/scrumlr.io
            org.opencontainers.image.vendor=inovex
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.title=scrumlr.io Frontend
            org.opencontainers.image.description=The web client for scrumlr.io
            org.opencontainers.image.version=${{ steps.prep_tags.outputs.tag }}
          cache-from: type=registry,ref=ghcr.io/inovex/scrumlr.io/scrumlr-frontend:cache
          cache-to: type=registry,ref=ghcr.io/inovex/scrumlr.io/scrumlr-frontend:cache,mode=max

      - name: Set outputs
        id: outputs
        run: |
          echo "frontend-image-tag=${{ steps.prep_tags.outputs.tag }}" >> $GITHUB_OUTPUT

  package-server:
    outputs:
      server-image-tag: ${{ steps.outputs.outputs.server-image-tag }}
    strategy:
      fail-fast: false
      matrix:
        tag: ["v2.1.0", "v2.1.1", "v2.1.2", "v2.2.0", "v2.2.1", "v2.2.2", "v2.2.3", "v2.2.4", "v2.5.0", "v2.6.0", "v2.6.1", "v2.6.2", "v2.6.3", "v2.6.4", "v2.7.0", "v2.7.1", "v2.7.2", "v2.7.3", "v2.7.4", "v2.7.5", "v2.7.6", "v2.7.7", "v2.7.8", "v2.8.0", "v2.8.1", "v3.0.0", "v3.1.0", "v3.2.0", "v3.2.1", "v3.3.0", "v3.4.0", "v3.4.1", "v3.5.0", "v3.5.1", "v3.5.2", "v3.5.3", "v3.6.0", "v3.7.0", "v3.7.1", "v3.8.0", "v3.8.1", "v3.8.2", "v3.9.0", "v3.10.0", "v3.10.1", "v3.10.2", "v3.10.3", "v3.11.0"]
        build_info:
          - { platform: 'linux/amd64', runner: 'ubuntu-latest' }
          - { platform: 'linux/arm64', runner: 'ubuntu-24.04-arm' }
    runs-on: ${{ matrix.build_info.runner }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.tag }}

      - name: Prepare Docker tags
        id: prep_tags
        run: |
          TAG="${{ matrix.tag }}"
          echo "tag=${TAG#v}" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server images
        uses: docker/build-push-action@v6
        with:
          context: ./server/src
          file: ./server/src/Dockerfile
          platforms: ${{ matrix.build_info.platform }}
          push: true
          tags: |
            ghcr.io/inovex/scrumlr.io/scrumlr-server:${{ steps.prep_tags.outputs.tag }}
            ghcr.io/inovex/scrumlr.io/scrumlr-server:latest
          labels: |
            org.opencontainers.image.authors=info@scrumlr.io
            org.opencontainers.image.url=https://github.com/inovex/scrumlr.io/pkgs/container/scrumlr.io%2Fscrumlr-server
            org.opencontainers.image.source=https://github.com/inovex/scrumlr.io
            org.opencontainers.image.vendor=inovex
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.title=scrumlr.io Server
            org.opencontainers.image.description=The server for scrumlr.io
            org.opencontainers.image.version=${{ steps.prep_tags.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set outputs
        id: outputs
        run: |
          echo "server-image-tag=${{ steps.prep_tags.outputs.tag }}" >> "$GITHUB_OUTPUT"