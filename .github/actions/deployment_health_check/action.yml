name: "Deployment health check"
description: |
  "Changes the DNS to our own (since the DNS dev-cluster records are fastest available here) and performes a healthcheck"

inputs:
  HEALTH_URL: 
    description: URL which the reachability check will run against
    required: true

runs:
  using: "composite"
  steps:
    - name: Change DNS Server
      run: |
        sudo sed -i 's/#DNS=/DNS=ns2.fra.cloud.inovex.io/' /etc/systemd/resolved.conf
        sudo systemctl daemon-reload
        sudo systemctl restart systemd-networkd
        sudo systemctl restart systemd-resolved
        dig +short github.com
      shell: bash

    - name: Wait for cluster to become healthy
      id: wait-for-cluster
      run: |
        # Run cluster health check
        # Disable cancelation of script on first error (since cluster might be not reachable -> curl would return error code != 0)
        set +e

        retry=1
        max_retries=5
        lastCurlExitCode=-1
        until [ $retry -gt $max_retries ]
        do
          response=$(curl --max-time 10 -s -k -o /dev/null -w "%{http_code}" "${{ inputs.HEALTH_URL }}")
          lastCurlExitCode=$?
          if [ $response = "204" ]; then
            echo "Cluster is healthy! Continuing..."
            break
          fi
          echo "Cluster is not responding. Retrying in $((5 * retry)) seconds..."
          sleep $((5 * retry))
          retry=$((retry + 1))
        done

        set -e # re-enable cancelation on error
        
        if [ $response != "204" ]; then
          echo "::error::Cluster is not responding after $max_retries attempts. URL: ${{ inputs.HEALTH_URL }} (Status-Code: $response)"
          exit 1
        fi   
      shell: bash