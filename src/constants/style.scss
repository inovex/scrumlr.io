// @use "sass:list";
@use "sass:color";

@import "./colors";

// TODO put below in files functions.scss and spacings.scss when other tasks are finished (avoid conflicts)

// board & column constants
$board__side-panel-width: 64px;
$header__height: 92px;
$info-bar__height: 42px;
$column__min-width: 300px;
$column__max-width: 960px;
$column__border-width: 12px;
$action-bar__width: 64px;

// emoji suggestions
$emoji-suggestions__max-height: 350px;

// stack view
$stack-content-max-height: 60vh;
$stack-content-max-height--mobile: initial; // initial: full height, otherwise 30vh looks good

// icons
$icon--small: 16px;
$icon--medium: 24px;
$icon--large: 32px;
$icon--extralarge: 40px;
$icon--huge: 48px;

// reaction constants
$reaction__inner-size: $icon--medium;
$reaction__padding--inner: 2px; // total: 24px + 2*2px = 28px
$reaction__gap-size: 4px;
$reaction__gap-size--small: 2px;
$reaction__padding--outer-top-bottom: 5px;
$reaction__padding--outer-left-right: 6px;
$reaction-list__left-spacing: 6px;

// flexbox
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// positioning
@mixin inset-0 {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

// border-radius
$note__border-radius: 16px;
$rounded--small: 8px;
$rounded--default: 16px;
$rounded--medium: 24px;
$rounded--large: 32px;
$rounded--full: 9999px;

// New spacing constants for flex gap, margin and padding
$spacing--xxs: 4px;
$spacing--xs: 8px;
$spacing--sm: 12px;
$spacing--base: 16px;
$spacing--md: 20px;
$spacing--lg: 24px;
$spacing--xl: 32px;
$spacing--2xl: 48px;
$spacing--3xl: 64px;

// font
$letter-spacing--small: 0.25px;
$letter-spacing--medium: 0.35px;
$letter-spacing--large: 0.75px;
$text-size--small: 12px;
$text-size--medium: 16px;
$text-size--large: 20px;
$line-height--small: 16px;
$line-height--medium: 20px;
$line-height--large: 32px;

// new font size constants
$text--xs: 0.75rem; // 12px
$text--sm: 0.875rem; // 14px
$text--base: 1rem; // 16px
$text--md: 1.25rem; // 20px
$text--lg: 1.5rem; // 24px
$text--xl: 2rem; // 32px
$text--2xl: 2.5rem; // 40px
$text--3xl: 3.875rem; // 62px

// filters
$darken--slightly: brightness(0.9);
$brighten--slightly: brightness(1.1);
$brighten--strongly: brightness(1.4);

// z-index
$base-z-index: 100;
$base-z-index-step: 10;
$note-z-index: $base-z-index + (2 * $base-z-index-step);
$emoji-suggestions-z-index: $note-z-index + $base-z-index-step;
$menu-z-index: $base-z-index + (8 * $base-z-index-step);
$menu-item-z-index: $menu-z-index + $base-z-index-step;
$board__navigation-button-z-index: $base-z-index + (6 * $base-z-index-step);
$backdrop-z-index: $base-z-index + (9 * $base-z-index-step);
$note-dialog-z-index: $base-z-index + (6 * $base-z-index-step);
$infobar-z-index: $base-z-index + (5 * $base-z-index-step);
$request-z-index: $base-z-index + (9 * $base-z-index-step);
$tooltip-z-index: $request-z-index;
$board-reaction-z-index: $backdrop-z-index + $base-z-index-step;

// breakpoints
$breakpoint--desktop: 1280px;

// responsive: @media query
$mini-smartphone: "screen and (max-width: 480px)";
$smartphone: "screen and (max-width: 767px)";
$tablet: "screen and (min-width : 768px)";
$desktop: "screen and (min-width : 1280px)";
$menu-mobile: "screen and (max-width: 1343px)";
$menu-desktop: "screen and (min-width: 1344px)";

// responsive: @container query
$container__note: "note (max-width: 300px)";

// shadows
$box-shadow--light: 0px 5px 15px 0px rgba(0, 0, 0, 0.2);
$box-shadow--dark: 0px 5px 15px 0px rgba(0, 0, 0, 0.35);

// gradients
$column-stripes--light: repeating-linear-gradient(
  45deg,
  $gray--100 calc(0px + var(--stripe-offset, 0px)),
  $gray--100 calc(20px + var(--stripe-offset, 0px)),
  rgba(var(--accent-color--light-rgb), 0.2) calc(20px + var(--stripe-offset, 0px)),
  rgba(var(--accent-color--light-rgb), 0.2) calc(40px + var(--stripe-offset, 0px))
);

$column-stripes--dark: repeating-linear-gradient(
  45deg,
  $navy--600 calc(0px + var(--stripe-offset, 0px)),
  $navy--600 calc(20px + var(--stripe-offset, 0px)),
  rgba(var(--accent-color--dark-rgb), 0.04) calc(20px + var(--stripe-offset, 0px)),
  rgba(var(--accent-color--dark-rgb), 0.04) calc(40px + var(--stripe-offset, 0px))
);

// helper functions
@function inset-border($left: false, $right: false, $top: false, $bottom: false, $color: var(--accent-color--light)) {
  $props: ();
  $props: append($props, if($left, inset #{2 * $column__border-width} 0 0 #{-$column__border-width} #{$color}, null), comma);
  $props: append($props, if($right, inset #{-2 * $column__border-width} 0 0 #{-$column__border-width} #{$color}, null), comma);
  $props: append($props, if($top, inset 0 #{2 * $column__border-width} 0 #{-$column__border-width} #{$color}, null), comma);
  $props: append($props, if($bottom, inset 0 #{-2 * $column__border-width} 0 #{-$column__border-width} #{$color}, null), comma);
  @return $props;
}

@function getLightHoverBackground($backgroundColor) {
  @return color.scale($backgroundColor, $lightness: -10%);
}
@function getDarkHoverBackground($backgroundColor) {
  @return color.scale($backgroundColor, $lightness: 10%);
}

@mixin inset-border($left: false, $right: false, $top: false, $bottom: false, $color: var(--accent-color--light)) {
  box-shadow: inset-border($left, $right, $top, $bottom, $color);
}

// scrollbar
@mixin scrollbar() {
  scrollbar-width: auto;

  scrollbar-color: var(--accent-color--200) var(--accent-color--100);

  // ampersand to correctly scope the rule
  [theme="dark"] & {
    scrollbar-color: rgba(var(--accent-color--dark-rgb), 0.8) rgba(var(--accent-color--dark-rgb), 0.6);
  }
}

// tooltip
@mixin tooltip {
  z-index: $tooltip-z-index;
  border-radius: $rounded--large;
  max-width: 80%;
  font-size: $text--sm;
}

@mixin tooltip--light {
  @include tooltip;
  color: $navy--900;
  background-color: $gray--300;
}

@mixin tooltip--dark {
  @include tooltip;
  color: $gray--000;
  background-color: $navy--200;
}
