@import "constants/style";

$item-size--default: 40px;
$option-size--default: 24px;
$item-size--small: 24px;
$option-size--small: 18px;

.color-picker {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding-bottom: $spacing--xxs;
  box-shadow: 0 0 20px rgba($navy--400, 0.12);
  background-color: $gray--300;
  list-style: none;
  padding-left: 0;
  margin-top: auto;
  border-radius: $rounded--full;

  // TODO make color picker always fitted
  // not sure why this doesn't use gap/padding properly in the first place but i'm just gonna override it
  &--fitted {
    gap: 4px;
    padding: 8px;
  }

  &__item {
    display: flex;
    justify-content: center;
    align-items: center;

    &-button {
      cursor: pointer;
      border: none;
      background: none;
      padding: 0;
      width: $item-size--default;
      height: $item-size--default;
      display: flex;
      justify-content: center;
      align-items: center;

      &--small {
        width: $item-size--small;
        height: $item-size--small;
      }

      // another override because we actually don't want to use the buttons' width+height as delimitation but padding+gap
      &--fitted {
        width: auto;
        height: auto;
      }

      &:focus-within {
        > .color-picker__color-option {
          border: 3px solid var(--accent-color--100);
        }
      }

      &:focus-visible {
        border-radius: $rounded--full;
        outline: none;
      }
    }
  }
}

[theme="dark"] {
  .color-picker {
    background-color: $navy--600;

    &__item {
      &__button {
        &:focus-visible {
          border-radius: $rounded--full;
          outline: none;
        }
      }
    }
  }

  .color-picker__color-option {
    background-color: var(--accent-color--400);
  }
}

.color-picker__color-option {
  width: $option-size--default;
  height: $option-size--default;
  border-radius: $rounded--full;
  background-color: var(--accent-color--500);
  border: 3px solid $gray--300;

  cursor: pointer;

  transition: 0.12s ease-out;
  transition-property: background-color, border, transform;

  &--small {
    width: $option-size--small;
    height: $option-size--small;
  }

  &--selected {
    background-color: var(--accent-color--500);
    border: 3px solid var(--accent-color--200);
  }

  &:hover,
  &:focus-visible {
    transform: scale(1.1);
    background-color: var(--accent-color--400);
    border: 3px solid var(--accent-color--100);
  }
}

[theme="dark"] {
  .color-picker__color-option {
    border: 3px solid $navy--600;

    &--selected {
      border: 3px solid var(--accent-color--200);
    }

    &:hover,
    &:focus-visible {
      transform: scale(1.1);
      border: 3px solid var(--accent-color--100);
    }
  }
}

.fix-focus-lock-placement {
  margin-top: auto;
}

@media #{$smartphone} {
  .color-picker {
    &--allow-vertical {
      flex-direction: row-reverse;
      position: absolute;
      right: 0;
      margin: auto;
      justify-self: center;
      padding-right: $spacing--xxs;
    }
  }

  .fix-focus-lock-placement {
    margin-top: initial;
    margin-bottom: auto;
  }
}
