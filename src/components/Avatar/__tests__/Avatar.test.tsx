import {render} from "testUtils";
import {Avatar} from "../Avatar";

describe("Avatar", () => {
  test("properties will be generated by the seed", () => {
    const {container} = render(<Avatar seed="2" />);
    expect(container).toMatchSnapshot();
  });

  test("if seed is set properties will be overwritten", () => {
    const {container} = render(<Avatar seed="1" clotheType="BlazerSweater" />);
    expect(container.querySelector("#Clothing\\/Hoodie")).toBeInTheDocument();
    expect(container.querySelector("#Clothing\\/BlazerSweater")).not.toBeInTheDocument();
  });

  test("seed will generate facial hair", () => {
    const {container} = render(<Avatar seed="1" />);
    expect(container.querySelector("[id^=Facial]")).toBeInTheDocument();
  });

  test("seed will leave out facial hair", () => {
    const {container} = render(<Avatar seed="0" />);
    expect(container.querySelector("[id^=Facial]")).not.toBeInTheDocument();
  });

  test("seed will generate accessories", () => {
    const {container} = render(<Avatar seed="2" />);
    expect(container.querySelector("[id^=Top\\/_Resources]")).toBeInTheDocument();
  });

  test("seed will leave out accessories", () => {
    const {container} = render(<Avatar seed="0" />);
    expect(container.querySelector("[id^=Top\\/_Resources]")).not.toBeInTheDocument();
  });

  test("seed will generate facial hair and accessories", () => {
    const {container} = render(<Avatar seed="2" />);
    expect(container.querySelector("[id^=Facial]")).toBeInTheDocument();
    expect(container.querySelector("[id^=Top\\/_Resources]")).toBeInTheDocument();
  });

  test("seed will generate facial hair but leave out accessories", () => {
    const {container} = render(<Avatar seed="1" />);
    expect(container.querySelector("[id^=Facial]")).toBeInTheDocument();
    expect(container.querySelector("[id^=Top\\/_Resources]")).not.toBeInTheDocument();
  });

  test("seed will leave out facial hair but generate accessories", () => {
    const {container} = render(<Avatar seed="3" />);
    expect(container.querySelector("[id^=Facial]")).not.toBeInTheDocument();
    expect(container.querySelector("[id^=Top\\/_Resources]")).toBeInTheDocument();
  });

  test("seed will leave out facial hair and accessories", () => {
    const {container} = render(<Avatar seed="0" />);
    expect(container.querySelector("[id^=Facial]")).not.toBeInTheDocument();
    expect(container.querySelector("[id^=Top\\/_Resources]")).not.toBeInTheDocument();
  });

  test("seed will define an accent color class", () => {
    const {container} = render(<Avatar seed="2" />);
    expect(container.firstChild).toHaveClass("accent-color__lean-lilac");
  });
});
