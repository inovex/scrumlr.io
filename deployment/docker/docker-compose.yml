---
services:
  scrumlr-backend:
    restart: always
    image: "ghcr.io/inovex/scrumlr.io/scrumlr-server:${SCRUMLR_BACKEND_VERSION:-4.0.0}"
    container_name: scrumlr-backend
    command:
      - "/app/main"
      - "-disable-check-origin"
    environment:
      SCRUMLR_LOG_LEVEL: "${SCRUMLR_LOG_LEVEL:-INFO}"
      SCRUMLR_SERVER_PORT: "${SCRUMLR_SERVER_PORT:-8080}"
      SCRUMLR_BASE_PATH: "${SCRUMLR_BASE_PATH}"
      SCRUMLR_INSECURE: "${SCRUMLR_INSECURE}"
      SCRUMLR_PRIVATE_KEY: "${SCRUMLR_PRIVATE_KEY}"
      SCRUMLR_SERVER_DATABASE_URL: "postgres://${POSTGRES_USER:-scrumlr}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-scrumlr}?sslmode=disable"
      SCRUMLR_SERVER_NATS_URL: "${SCRUMLR_SERVER_NATS_URL}"
      # Redis variables (if you decide to use Redis instead of NATS)
      SCRUMLR_SERVER_REDIS_HOST: "${REDIS_HOST}"
      SCRUMLR_SERVER_REDIS_USERNAME: "${REDIS_USERNAME}"
      SCRUMLR_SERVER_REDIS_PASSWORD: "${REDIS_PASSWORD}"
      SCRUMLR_FEEDBACK_WEBHOOK_URL: "${WEBHOOK_URL}"
      SCRUMLR_AUTH_CALLBACK_HOST: "${AUTH_CALLBACK_HOST}"
      SCRUMLR_AUTH_GOOGLE_CLIENT_ID: "${GOOGLE_CLIENT_ID}"
      SCRUMLR_AUTH_GOOGLE_CLIENT_SECRET: "${GOOGLE_CLIENT_SECRET}"
      SCRUMLR_AUTH_MICROSOFT_CLIENT_ID: "${MICROSOFT_CLIENT_ID}"
      SCRUMLR_AUTH_MICROSOFT_CLIENT_SECRET: "${MICROSOFT_CLIENT_SECRET}"
      SCRUMLR_AUTH_GITHUB_CLIENT_ID: "${GITHUB_CLIENT_ID}"
      SCRUMLR_AUTH_GITHUB_CLIENT_SECRET: "${GITHUB_CLIENT_SECRET}"
      SCRUMLR_AUTH_AZURE_AD_TENANT_ID: "${AZURE_AD_TENANT_ID}"
      SCRUMLR_AUTH_AZURE_AD_CLIENT_ID: "${AZURE_AD_CLIENT_ID}"
      SCRUMLR_AUTH_AZURE_AD_CLIENT_SECRET: "${AZURE_AD_CLIENT_SECRET}"
      SCRUMLR_AUTH_APPLE_CLIENT_ID: "${APPLE_CLIENT_ID}"
      SCRUMLR_AUTH_APPLE_CLIENT_SECRET: "${APPLE_CLIENT_SECRET}"
      SCRUMLR_AUTH_OIDC_CLIENT_ID: "${OIDC_CLIENT_ID}"
      SCRUMLR_AUTH_OIDC_CLIENT_SECRET: "${OIDC_CLIENT_SECRET}"
      SCRUMLR_AUTH_OIDC_DISCOVERY_URL: "${OIDC_DISCOVERY_URL}"
      SESSION_SECRET: "${SESSION_SECRET}"
      SCRUMLR_ENABLE_EXPERIMENTAL_AUTH_FILE_SYSTEM_STORE: "${SCRUMLR_ENABLE_EXPERIMENTAL_AUTH_FILE_SYSTEM_STORE}"
      SCRUMLR_OTEL_GRPC: "${SCRUMLR_OTEL_GRPC}"
      SCRUMLR_OTEL_HTTP: "${SCRUMLR_OTEL_HTTP}"
      # SCRUMLR_CONFIG_PATH: "${SCRUMRL_CONFIG_PATH}"
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:${SCRUMLR_SERVER_PORT:-8080}/api/health || exit 1"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5

  scrumlr-frontend:
    restart: always
    image: "ghcr.io/inovex/scrumlr.io/scrumlr-frontend:${SCRUMLR_FRONTEND_VERSION:-4.0.0}"
    container_name: scrumlr-frontend
    environment:
      SCRUMLR_LISTEN_PORT: "${SCRUMLR_LISTEN_PORT:-8080}"
      SCRUMLR_SERVER_URL: "${SCRUMLR_SERVER_URL}"
      SCRUMLR_WEBSOCKET_URL: "${SCRUMLR_WEBSOCKET_URL}"
      SCRUMLR_SHOW_LEGAL_DOCUMENTS: "${SCRUMLR_SHOW_LEGAL_DOCUMENTS}"
      SCRUMLR_ANALYTICS_DATA_DOMAIN: "${ANALYTICS_DATA_DOMAIN}"
      SCRUMLR_ANALYTICS_SRC: "${ANALYTICS_SRC}"
      SCRUMLR_CLARITY_ID: "${SCRUMLR_CLARITY_ID}"
    depends_on:
      scrumlr-backend:
        condition: service_healthy

  postgres:
    restart: always
    image: "postgres:${POSTGRES_VERSION:-17.5}"
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-scrumlr}
      POSTGRES_USER: ${POSTGRES_USER:-scrumlr}
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-scrumlr} -d ${POSTGRES_DB:-scrumlr}" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    restart: always
    image: "nats:${NATS_VERSION:-2.11.6}"
    container_name: nats

  # oidc.localhost:
  #   restart: always
  #   image: ghcr.io/dexidp/dex:v2.41.1-distroless
  #   container_name: oidc.localhost
  #   volumes:
  #     - ./dex.yaml:/etc/dex/config.docker.yaml:ro
  #   ports:
  #     - "5556:5556"
  #   profiles:
  #     - oidc

  caddy:
    restart: always
    image: "caddy:${CADDY_VERSION:-2.10.0}"
    container_name: caddy
    environment:
      SCRUMLR_SERVER_PORT: "${SCRUMLR_SERVER_PORT:-8080}"
      SCRUMLR_LISTEN_PORT: "${SCRUMLR_LISTEN_PORT:-8080}"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    ports:
      - "80:80"
      - "443:443"


volumes:
  postgres_data:
