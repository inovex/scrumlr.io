### This file is used to automatically deploy the application to the development environment.
apiVersion: v1
kind: Service
metadata:
  name: scrumlr-backend-PR_NUMBER
spec:
  selector:
    app: scrumlr-PR_NUMBER
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scrumlr-deployment-PR_NUMBER
  labels:
    app: scrumlr-PR_NUMBER
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scrumlr-PR_NUMBER
  template:
    metadata:
      labels:
        app: scrumlr-PR_NUMBER
    spec:
      containers:
        - name: scrumlr
          image: ghcr.io/inovex/scrumlr.io/scrumlr-server
          args:
            - "/app/main"
            - "-disable-check-origin"
          resources:
            requests:
              cpu: "10m"
              memory: "50Mi"
          env:
            - name: SCRUMLR_SERVER_PORT
              value: "8080"
            - name: SCRUMLR_API_HOST
              value: "https://PR_NUMBER.development.scrumlr.fra.ics.inovex.io"
            - name: SCRUMLR_SERVER_NATS_URL
              value: nats://nats-PR_NUMBER:4222
            - name: SCRUMLR_AUTH_CALLBACK_HOST
              value: "https://PR_NUMBER.development.scrumlr.fra.ics.inovex.io"
            - name: SCRUMLR_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: scrumlr-ecdsa-key
                  key: private_key
            - name: SCRUMLR_SERVER_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: postgres-url-PR_NUMBER
                  key: url
            - name: SCRUMLR_AUTH_GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: scrumlr-secrets
                  key: GOOGLE_CLIENT_ID
            - name: SCRUMLR_AUTH_GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: scrumlr-secrets
                  key: GOOGLE_CLIENT_SECRET
            - name: SCRUMLR_AUTH_MICROSOFT_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: scrumlr-secrets
                  key: MICROSOFT_CLIENT_ID
            - name: SCRUMLR_AUTH_MICROSOFT_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: scrumlr-secrets
                  key: MICROSOFT_CLIENT_SECRET
            - name: SCRUMLR_FEEDBACK_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: scrumlr-secrets
                  key: WEBHOOK_URL
            - name: SCRUMLR_BASE_PATH
              value: "/api"
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: scrumlr-frontend-PR_NUMBER
spec:
  selector:
    app: frontend-PR_NUMBER
  ports:
    - port: 80
      targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment-PR_NUMBER
  labels:
    app: frontend-PR_NUMBER
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-PR_NUMBER
  template:
    metadata:
      labels:
        app: frontend-PR_NUMBER
    spec:
      containers:
        - name: frontend
          image: ghcr.io/inovex/scrumlr.io/scrumlr-frontend
          resources:
            requests:
              cpu: "10m"
              memory: "50Mi"
          env:
            # - name: SCRUMLR_SERVER_PORT
            #   value: "80"
            - name: SCRUMLR_SERVER_URL
              value: /api
            # - name: SCRUMLR_WEBSOCKET_URL
            #   value: /api
            - name: SCRUMLR_SHOW_LEGAL_DOCUMENTS
              value: "true"
          ports:
            - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: scrumlr-landing-page-PR_NUMBER
spec:
  selector:
    app: landing-page-PR_NUMBER
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: landing-page-PR_NUMBER
  labels:
    app: landing-page-PR_NUMBER
spec:
  replicas: 1
  selector:
    matchLabels:
      app: landing-page-PR_NUMBER
  template:
    metadata:
      labels:
        app: landing-page-PR_NUMBER
    spec:
      containers:
        - name: landing-page
          image: ghcr.io/inovex/scrumlr.io-landing-page/image:latest
          resources:
            requests:
              cpu: "100m"
              memory: "100Mi"
            limits:
              cpu: "200m"
              memory: "200Mi"
          ports:
            - containerPort: 8080
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: scrumlr-ingressroute-PR_NUMBER
  annotations:
    external-dns.alpha.kubernetes.io/target: ingress.dev.scrumlr.fra.ics.inovex.io.
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`PR_NUMBER.development.scrumlr.fra.ics.inovex.io`) && PathPrefix(`/api`)
      kind: Rule
      services:
        - name: scrumlr-backend-PR_NUMBER
          port: 8080
    - match: Host(`PR_NUMBER.development.scrumlr.fra.ics.inovex.io`) && (PathPrefix(`/static`) || PathPrefix(`/locales`) || PathPrefix(`/login`) || PathPrefix(`/board`) || PathPrefix(`/new`)  || PathPrefix(`/timer_finished.mp3`) || PathPrefix(`/hotkeys.pdf`) || PathPrefix(`/legal/`))
      kind: Rule
      services:
        - name: scrumlr-frontend-PR_NUMBER
          port: 80
    - match: Host(`PR_NUMBER.development.scrumlr.fra.ics.inovex.io`)
      kind: Rule
      services:
        - name: scrumlr-landing-page-PR_NUMBER
          port: 80

  tls:
    secretName: scrumlr-development-certificate-PR_NUMBER
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: scrumlr-development-certificate-PR_NUMBER
spec:
  secretName: scrumlr-development-certificate-PR_NUMBER
  issuerRef:
    name: letsencrypt-staging
    kind: ClusterIssuer
  commonName: PR_NUMBER.development.scrumlr.fra.ics.inovex.io
  dnsNames:
    - PR_NUMBER.development.scrumlr.fra.ics.inovex.io
---
# Database for the deployment
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: cluster-PR_NUMBER
spec:
  imageName: ghcr.io/cloudnative-pg/postgresql:15.1
  instances: 1
  storage:
    storageClass: csi-cinder-sc-delete
    size: 1Gi
  affinity:
    enablePodAntiAffinity: true
    topologyKey: failure-domain.beta.kubernetes.io/zone
  postgresql:
    parameters:
      shared_buffers: 256MB
      max_connections: "200"
  bootstrap:
    initdb:
      database: scrumlr
      owner: scrumlr
      secret:
        name: postgresql-creds
---
# secret containing the database url
apiVersion: v1
kind: Secret
metadata:
  name: postgres-url-PR_NUMBER
type: Opaque
stringData:
  url: postgres://scrumlr:POSTGRES_DEV_PASSWORD@cluster-PR_NUMBER-rw:5432/scrumlr
---
# nats repository
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: nats
spec:
  interval: 30m
  url: https://nats-io.github.io/k8s/helm/charts/
---
# nats deployment
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nats-PR_NUMBER
spec:
  releaseName: nats-PR_NUMBER
  chart:
    spec:
      chart: nats
      version: 0.19.12
      sourceRef:
        kind: HelmRepository
        name: nats
  install: {}
  interval: 10m0s
  targetNamespace: scrumlr-dev-deployments
